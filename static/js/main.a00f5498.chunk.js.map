{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changebleUrl","console","log","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a00f5498.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\r\nimport { Card, Grid, CardContent, Typography } from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\r\n  if(!confirmed) {\r\n    return 'Loading'\r\n  }\r\n    \r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n              </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n              </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n              </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        \r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n  let changebleUrl = url;\r\n\r\n  if (country == 'global') {\r\n    changebleUrl = url;\r\n  } else if ( country ) {\r\n    changebleUrl = `${url}/countries/${country}`\r\n    console.log(`${url}/countries/${country}`)\r\n  }\r\n  \r\n\r\n  try {\r\n    const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changebleUrl);\r\n\r\n    return  {confirmed, recovered, deaths, lastUpdate};\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);    \r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      recovered: dailyData.recovered.total,\r\n      date: dailyData.reportDate,\r\n    }))\r\n    return modifiedData;\r\n    \r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {data: { countries }} = await axios.get(`${url}/countries`)\r\n\r\n    return countries.map((country) => {\r\n      return country.name\r\n    })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\n\r\nconst Charts = ({data: {confirmed, deaths, recovered}, country}) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setDailyData( await fetchDailyData())   \r\n    })();\r\n  }, [])\r\n\r\n  const lineChart = (\r\n    \r\n    dailyData.length\r\n      ? (\r\n        <Line \r\n          data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: 'Infected',\r\n              borderColor: '#3333ff',\r\n              fill: true,\r\n            }, {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: 'Deaths',\r\n              borderColor: 'red',\r\n              backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n              fill: true,\r\n            }],\r\n          }}\r\n        />) : null\r\n  )\r\n  \r\n  console.log(confirmed, deaths, recovered)\r\n  const barChart = (\r\n    confirmed \r\n      ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Death'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor: [\r\n                'rgba(0, 0, 255, 0.5)',\r\n                'rgba(0, 255, 0, 0.5)',\r\n                'rgba(255, 0, 0, 0.5)',\r\n              ],\r\n              data: [confirmed.value, recovered.value, deaths.value,]\r\n            }]\r\n          }}\r\n          options={{\r\n            legend: {display: false},\r\n            title: {display: true, text:`Current state in ${country}`}\r\n          }}\r\n        /> \r\n      ) : null\r\n  )\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Charts;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl } from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport { fetchCountries } from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries())\r\n    }\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries])\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => {\r\n        handleCountryChange(e.target.value)\r\n      }}>\r\n        <option value=\"global\">Global</option>\r\n        {\r\n        fetchedCountries ?\r\n        fetchedCountries.map((country,i) => <option value={country} key={i}>{country}</option>\r\n        ) : null}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\n\nimport { Cards, Charts, CountryPicker } from './components';\nimport styles from './App.module.css'\nimport { fetchData } from './api'\n\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n  \n\n  async componentDidMount() {\n    const data = await fetchData()\n    this.setState({ data: data})\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({data: fetchedData, country: country})\n    console.log(fetchedData)\n    \n\n  }\n  \n  render() {\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n        <Cards data = {this.state.data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Charts  data={this.state.data} country={this.state.country}/>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}